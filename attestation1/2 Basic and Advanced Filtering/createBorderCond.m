function [B] = createBorderCond(A, N, cond)
    % Image size
    ax = size(A,1);
    ay = size(A,2);
    % Size of the extended image
    bx = ax + 2*N;
    by = ay + 2*N;
    B = zeros(bx, by);      % initialize the extended image with 0

    if strcmp(cond, 'mirror')
        % Apply the bordering condition 'mirror'
        % Matrix B:
        %       |                |
        %    1  |       2        |  3
        % ------|----------------|-----
        %       |                |
        %       |                |
        %    4  |       A        |  5
        %       |                |
        %       |                |
        % ------|----------------|-----
        %    6  |       7        |  8
        %       |                |
        % The mirrored corner edges are created by rotating the image
        % corner values by 180°.
        % The other sections (2,4,5,7) are generated by selecting the
        % border values and flipping them.
        B(1:N, 1:N) = rot90(A(1:N, 1:N),2);                 % part 1 - upper left corner
        B(1:N, N+1:ay+N) = flipud(A(1:N, :));               % part 2
        B(1:N, (ay+N+1):by) = rot90(A(1:N, ay-N+1:ay),2);   % part 3 - upper right corner
        
        B(N+1:ax+N, 1:N) = fliplr(A(:, 1:N));               % part 4
        B(N+1:ax+N, by-N+1:by) = fliplr(A(:, ay-N+1:ay));   % part 5
        
        B(N+ax+1:bx, 1:N) = rot90(A(ax-N+1:ax, 1:N),2);                 % part 6 - lower left corner
        B(N+ax+1:bx, N+1:ay+N) = flipud(A(ax-N+1:ax, :));               % part 7
        B(N+ax+1:bx, N+ay+1:by) = rot90(A(ax-N+1:ax, ay-N+1:ay),2);     % part 8 - lower right corner
        
    elseif strcmp(cond, 'arbitrary')
        % Apply the bordering condition 'arbitrary'
        % The values are selected from [0, max(A(:))]
        % Matrix B:
        %       |                |                   
        %           upper part
        % ------|----------------|-----
        %       |                |
        % left  |       A        | right
        % part  |                | part
        %       |                |
        % ------|----------------|-----
        %           lower part
        %       |                |
        maxValue = round(max(A(:)));
        B(1:N, :) = randi(maxValue, N, by);                  % upper part
        B(N+1:(ax+N), 1:N) = randi(maxValue, ax, N);         % left part
        B(N+1:(ax+N), ay+N+1:by) = randi(maxValue, ax, N);   % right part
        B(N+ax+1:bx, :) = randi(maxValue, N, by);            % lower part

    else
        error('createBordCond:WrongCondition', ['The condition <' cond '> is not a valid parameter value']);
    end

    B(N+1:end-N, N+1:end-N) = A;        % place original matrix into the center of the extended matrix.

end